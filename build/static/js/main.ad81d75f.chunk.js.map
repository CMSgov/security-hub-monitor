{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","columns","setColumns","headers","setHeaders","data","setData","titleColumns","setTitleColumns","titleData","setTitleData","severityColumns","setSeverityColumns","severityData","setSeverityData","filterOptions","setFilterOptions","filterSelections","setFilterSelections","filteredData","setFilteredData","searchArray","setSearchArray","handleFilters","e","o","name","target","vals","map","v","value","searchData","firstFilter","h","field","filteredDataThisField","toLowerCase","results","filter","d","includes","concat","length","processFilteredData","searchValue","searchedData","Object","values","reduce","allData","row","title","Title","id","label","MyResponsivePie","innerRadius","padAngle","cornerRadius","colors","borderWidth","borderColor","from","modifiers","enableArcLinkLabels","className","TitleTable","pagination","highlightOnHover","defaultSortAsc","defaultSortField","SeverityTable","conditionalRowStyles","when","style","backgroundColor","FullTable","Filter","htmlFor","isMulti","options","classNamePrefix","onChange","type","accept","file","files","reader","FileReader","onload","evt","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","dataString","dataStringLines","split","i","obj","j","substring","x","push","filters","header","Array","Set","finding","f","c","selector","sortable","width","processData","sheet_to_csv","readAsBinaryString","required","placeholder","height","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad81d75f.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { ResponsivePie } from '@nivo/pie'\nimport * as XLSX from 'xlsx';\nimport DataTable from 'react-data-table-component';\nimport Select from 'react-select';\n\nfunction App() {\n\n  const [columns, setColumns] = useState([]);\n  const [headers, setHeaders] = useState([]);\n  const [data, setData] = useState([]);\n  const [titleColumns, setTitleColumns] = useState([]);\n  const [titleData, setTitleData] = useState([]);\n  const [severityColumns, setSeverityColumns] = useState([]);\n  const [severityData, setSeverityData] = useState([]);\n  const [filterOptions, setFilterOptions] = useState({});\n  const [filterSelections, setFilterSelections] = useState({});\n  const [filteredData, setFilteredData] = useState([]);\n  const [searchArray, setSearchArray] = useState({});\n\n\n  const processData = dataString => {\n    const dataStringLines = dataString.split(/\\r\\n|\\n/);\n    const headers = dataStringLines[0].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n\n    const data = [];\n    for (let i = 1; i < dataStringLines.length; i++) {\n      const row = dataStringLines[i].split(/,(?![^\"]*\"(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n      if (headers && row.length === headers.length) {\n        const obj = {};\n        for (let j = 0; j < headers.length; j++) {\n          let d = row[j];\n          if (d.length > 0) {\n            if (d[0] === '\"')\n              d = d.substring(1, d.length - 1);\n            if (d[d.length - 1] === '\"')\n              d = d.substring(d.length - 2, 1);\n          }\n          if (headers[j]) {\n            obj[headers[j]] = d;\n          }\n        }\n\n        // remove the blank rows\n        if (Object.values(obj).filter(x => x).length > 0) {\n          data.push(obj);\n        }\n      }\n    }\n\n    const filters = {};\n    for (let h = 0; h < headers.length; h++) {\n      const header = headers[h];\n      filters[header] = Array.from(new Set(data.map(finding => finding[header])));\n      searchArray[header] = [\"\"];\n    }\n    searchArray['Search'] = [\"\"];\n    const filterOptions = {};\n    for (let f in filters) {\n      filterOptions[f] = filters[f].map(x => {\n        return {label: x, value: x}\n      });\n    }\n\n    // prepare columns list from headers\n    const columns = headers.map(c => ({\n      name: c,\n      selector: c,\n    }));\n\n    const titleColumns = [\n      {\n        name: 'Title',\n        selector: 'id',\n        sortable: true,\n        width: '80%'\n      },\n      {\n        name: '# resources affected',\n        selector: 'value',\n        sortable: true,\n      },\n    ];\n\n    const severityColumns = [\n      {\n        name: 'Severity',\n        selector: 'id',\n        sortable: true,\n      },\n      {\n        name: '# resources affected',\n        selector: 'value',\n        sortable: true,\n      },\n    ];\n    setData(data);\n    setSearchArray(searchArray);\n    setHeaders(headers);\n    setColumns(columns);\n    setTitleColumns(titleColumns);\n    setSeverityColumns(severityColumns);\n    setFilterOptions(filterOptions);\n    processFilteredData(data);\n  }\n\n\n  const handleFileUpload = e => {\n    const file = e.target.files[0];\n    const reader = new FileReader();\n    reader.onload = (evt) => {\n      /* Parse data */\n      const bstr = evt.target.result;\n      const wb = XLSX.read(bstr, { type: 'binary' });\n      /* Get first worksheet */\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      /* Convert array of arrays */\n      const data = XLSX.utils.sheet_to_csv(ws, { header: 1 });\n      processData(data);\n    };\n    reader.readAsBinaryString(file);\n  }\n\n\n  const handleFilters = (e,o) => {\n    const name = o ? o.name : e.target.name;\n    const vals = o ? e : [e.target];\n    searchArray[name] = vals.map(v => v.value);\n    filterSelections[name] = vals;\n    setFilterSelections(filterSelections);\n    setSearchArray(searchArray);\n    searchData();\n  }\n\n\n  const searchData = () => {\n    let filteredData = data;\n    let firstFilter = false;\n    for (let h = 0; h < headers.length; h++) {\n      const field = headers[h];\n      let filteredDataThisField = [];\n      for (let v = 0; v < searchArray[field].length; v++) {\n        const value = searchArray[field][v].toLowerCase();\n        if (!value) continue;\n        firstFilter = true;\n        const results = filteredData.filter(d => d[field].toLowerCase().includes(value));\n        filteredDataThisField = filteredDataThisField.concat(results);\n      }\n      if (firstFilter) {\n        firstFilter = false;\n        filteredData = filteredDataThisField;\n      } else {\n        filteredData = filteredData.concat(filteredDataThisField);\n      }\n    }\n    processFilteredData(filteredData);\n  }\n\n\n  const processFilteredData = (filteredData) => {\n    const searchValue = searchArray['Search'][0].toLowerCase();\n    if (searchValue) {\n      let searchedData = [];\n      for (let h = 0; h < headers.length; h++) {\n        const field = headers[h];\n        let filteredDataThisField = filteredData.filter(d => d[field].toLowerCase().includes(searchValue));\n        searchedData = searchedData.concat(filteredDataThisField);\n      }\n      filteredData = searchedData;\n    }\n    setFilteredData(filteredData);\n\n    const titleData = Object.values(filteredData.reduce((allData, row) => {\n      const title = row.Title;\n      if(!allData[title]) {\n        allData[title] = {id: title, value: 1};\n      } else {\n        allData[title].value += 1;\n      }\n      return allData;\n    }, {}));\n    setTitleData(titleData);\n\n    const severityData = Object.values(filteredData.reduce((allData, row) => {\n      const label = row['Severity Label'];\n      if(!allData[label]) {\n        allData[label] = {id: label, value: 1};\n      } else {\n        allData[label].value += 1;\n      }\n      return allData;\n    }, {}));\n    setSeverityData(severityData);\n  }\n\n\n  const MyResponsivePie = () => (\n    <ResponsivePie\n      data={severityData}\n      innerRadius={0.5}\n      padAngle={0.7}\n      cornerRadius={3}\n      // colors={{ scheme: 'yellow_orange_red' }}\n      colors={(d) =>{\n        switch(d.id) {\n          case 'LOW': return '#ffffcc';\n          case 'MEDIUM': return '#ffeda0';\n          case 'HIGH': return '#fed976';\n          case 'CRITICAL': return '#feb24c';\n          default:\n        }\n      }}\n      borderWidth={1}\n      borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\n      enableArcLinkLabels={false}\n      className=\"pie\"\n    />\n  );\n\n\n  const TitleTable = () => {\n    return (\n      <DataTable\n        pagination\n        highlightOnHover\n        columns={titleColumns}\n        data={titleData}\n        defaultSortAsc={false}\n        defaultSortField={\"value\"}\n        className=\"datatable\"\n        title=\"Findings by title\"\n      />\n    );\n  };\n\n\n  const SeverityTable = () => {\n    return (\n      <DataTable\n        pagination\n        highlightOnHover\n        columns={severityColumns}\n        data={severityData}\n        defaultSortAsc={false}\n        defaultSortField={\"value\"}\n        className=\"datatable\"\n        title=\"Findings by severity\"\n        conditionalRowStyles={conditionalRowStyles}\n      />\n    );\n  };\n\n  const conditionalRowStyles = [\n    {\n      when: row => row.id === 'LOW',\n      style: {\n        backgroundColor: '#ffffcc'\n      }\n    },\n    {\n      when: row => row.id === 'MEDIUM',\n      style: {\n        backgroundColor: '#ffeda0'\n      }\n    },\n    {\n      when: row => row.id === 'HIGH',\n      style: {\n        backgroundColor: '#fed976'\n      }\n    },\n    {\n      when: row => row.id === 'CRITICAL',\n      style: {\n        backgroundColor: '#feb24c'\n      }\n    },\n  ];\n\n\n  const FullTable = () => {\n    return (\n      <DataTable\n        pagination\n        highlightOnHover\n        columns={columns}\n        data={filteredData}\n        className=\"datatable\"\n        title=\"All findings\"\n      />\n    );\n  };\n\n  const Filter = ({name}) => {\n    return (\n      <div className=\"field\">\n        <label htmlFor={name}>{name}:</label>\n        <Select\n          isMulti\n          name={name}\n          options={filterOptions[name]}\n          className=\"basic-multi-select\"\n          classNamePrefix=\"select\"\n          value={filterSelections[name]}\n          onChange={handleFilters}\n        />\n      </div>\n    );\n  };\n\n\n  return (\n    <div>\n      <form id=\"form\">\n        <div className=\"field\">\n          <label htmlFor=\"File\">File:</label>\n          <input\n            type=\"file\"\n            accept=\".csv,.xlsx,.xls\"\n            onChange={handleFileUpload}\n            required\n            name=\"File\"\n          />\n        </div>\n        <div className=\"field\">\n          <label htmlFor=\"Search\">Search:</label>\n          <input\n            type=\"search\"\n            name=\"Search\"\n            placeholder=\"Type to filter all fields\"\n            onChange={handleFilters}\n          />\n        </div>\n        <Filter name=\"Team\"/>\n        <Filter name=\"AWS Account ID\"/>\n        <Filter name=\"Compliance Status\"/>\n        <Filter name=\"Severity Label\"/>\n        <Filter name=\"Resource Type\"/>\n        <Filter name=\"Record State\"/>\n        <button type=\"reset\">Reset</button>\n      </form>\n\n      <div className=\"half\">\n        <TitleTable/>\n      </div>\n\n      <div className=\"twosixths\">\n        <SeverityTable/>\n      </div>\n      <div className=\"onesixth pie\" style={{ height: 300}}>\n        <MyResponsivePie/>\n      </div>\n\n      <div className=\"full\">\n        <FullTable/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-snapshot';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
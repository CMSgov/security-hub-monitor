name: validate
on:
  pull_request:
  push:
    branches:
      - 'push-action/**'


jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - name: Create env var for git sha tag
      run: echo "HASH=$(git rev-parse --short "$GITHUB_SHA")" >> "$GITHUB_ENV"
    - name: setup go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16
    - name: setup python
      uses: actions/setup-python@v2
    - name: pre-commit-cache
      uses: actions/cache@v2
      env:
        cache-name: pre-commit-dot-cache
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('**/.pre-commit-config.yaml') }}
    - name: run pre-commit
      uses: pre-commit/action@v2.0.3
    - name: Set up node.js
      uses: actions/setup-node@v1
      with:
        node-version: '15.x'
    - run: npm i
    - run: npm run test -- --coverage
      env:
        CI: true
    - name: goreleaser snapshot build
      uses: goreleaser/goreleaser-action@v2
      with:
        args: release --rm-dist --snapshot
    - name: cache-docker
      uses: actions/cache@v1
      with:
        path: /tmp/docker-save
        key: docker-save-${{ hashFiles('Dockerfile') }}
    - name: load previous docker cache
      run: docker load -i /tmp/docker-save/snapshot.tar || true
      if: steps.cache-docker.outputs.cache-hit == 'true'
    - name: run docker build
      run: docker build . -t security-hub-monitor:${{ env.HASH }} --cache-from=security-hub-monitor-cache
    - name: tag and cache docker build for next time
      run: docker tag security-hub-monitor security-hub-monitor-cache && mkdir -p /tmp/docker-save && docker save security-hub-monitor-cache -o /tmp/docker-save/snapshot.tar && ls -lh /tmp/docker-save || true
      if: always() && steps.cache-docker.outputs.cache-hit != 'true'
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'security-hub-monitor:${{env.HASH}}'
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'
    - name: Run Dockle for docker best practices
      uses: hands-lab/dockle-action@v1
      with:
        image: 'security-hub-monitor:${{env.HASH}}'
        exit-code: '1'
